<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ChartScript GroupBy="Always">
  <Columns>
    <Column DisplayName="Horizontal Axis" ColumnType="Groupable" IsGroupKey="true" />
    <Column DisplayName="Height" ColumnType="Magnitude" />
  </Columns>
  <Icon FileName="lines.png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAa1JREFUeNpi/P//P8NgBkwMgxwMDQfGFi/+PxqCow4cdeCoA0cdOOpAsgDLYHEIcm22uDeWcTSKBzSKcUUHuWD38bv/DbXlGIqS7BkHXRpcs+vK/wtXHzG0FHox0iSKu2bvI7upNm/t6f+v3nzC6TiyHairIQ2OWhDm4eZgWLXjEsmOnLrsGFhPVpQVI1XTYMvUXf9rst3ghoIsKGhZ/z/MQ4+ktOvjqs8Q7qHHSNVcXNG9GcVxMDChJpBx4qLDJIUiMY4jyYETFx7631Hqi9NQUWFehgXrz/ynWzGDHB0SonwM3RX+eH0c5W3A2DvvAFYH7jlx7/+xM3fIKpKICkFCjoOB4iQHxvzmdSiOXLHt4v+L1x4z1OW4MVI1BMkF7z58hYe+rbkaw9dvP4EOt2ekahRvO3zzv4aKBEN1pitFtQQLMxNDYYIdI1XT4Jqdl/4/ffGBYseBQFKwKSNVMwmowL378DVDZboz2QZTo25GBowxRYvgidrKRJkhM9KKkWEQAZRcPNgcNyTagwyg8UFQNIPowYiHTot6MA3BIZcEjKNDwKMOHHUgfgAQYACzwAoJxqi5QAAAAABJRU5ErkJggg==]]></Icon>
  <Script><![CDATA[function DrawChart(chart, data){
  
  //config variables
  var yAxisLabelWidth = 60,
      fontSize = 10,
      ticksLength = 4,
      labelMargin = 5,
      chartAxisPadding = 5,
      padding = 5,
      yAxisLeftPosition = padding + fontSize + yAxisLabelWidth + (2 * labelMargin) + ticksLength,
        xAxisTopPosition = height - padding - (fontSize * 3) - (labelMargin * 3) - ticksLength,
          color = 'steelblue';
  
  //x axis scale
  var x = d3.scale.ordinal()
      .domain($.map(data.rows, function (e) { return getKey(e.c0); }))
      .rangeBands([0, width - yAxisLeftPosition - padding - (2 * chartAxisPadding)]);
  
  //y axis scale
  var y = d3.scale.linear()
      .domain([0, d3.max($.map(data.rows, function (e) { return getKey(e.c1); }))])
      .range([0, xAxisTopPosition - padding]);
  
  //paint x-axis ticks
  chart.append('svg:g').attr('class', 'x-axis-tick').attr('transform', 'translate(' + (yAxisLeftPosition + (x.rangeBand() / 2)) + ', ' + xAxisTopPosition + ')')
    .enterData(data.rows, 'line', 'x-axis-tick')
      .attr('y2', function (v, i) { return (i % 2 == 0 ? ticksLength : (ticksLength + fontSize + labelMargin)); })
      .attr('x1', function (v) { return x(getKey(v.c0)); })
      .attr('x2', function (v) { return x(getKey(v.c0)); });
  
  //paint x-axis tick labels
  chart.append('svg:g').attr('class', 'x-axis-tick-label').attr('transform', 'translate(' + (yAxisLeftPosition + (x.rangeBand() / 2)) + ', ' + (xAxisTopPosition + ticksLength + labelMargin + fontSize) + ')')
    .enterData(data.rows, 'text', 'x-axis-tick-label')
      .attr('x', function (v) { return x(getKey(v.c0)); })
      .attr('y', function (v, i) { return (i % 2 == 0 ? 0 : (fontSize + labelMargin)); })
      .attr('text-anchor', 'middle')
      .text(function (v) { return getLabel(v.c0); });
  
  //paint x-axis - token label
  chart.append('svg:g').attr('class', 'x-axis-token-label').attr('transform', 'translate(' + (yAxisLeftPosition + ((width - yAxisLeftPosition) / 2)) + ', ' + (height) + ')')
    .append('svg:text').attr('class', 'x-axis-token-label')
      .attr('text-anchor', 'middle')
      .text(data.columns.c0.title);
  
  //paint y-axis - ruler
  var yTicks = y.ticks(8);
  chart.append('svg:g').attr('class', 'y-ruler').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ')')
    .enterData(yTicks, 'line', 'y-ruler')
    .attr('x2', width - yAxisLeftPosition - padding)
    .attr('y1', function (t) { return -y(t); })
    .attr('y2', function (t) { return -y(t); });
  
  //paint y-axis - ticks
  chart.append('svg:g').attr('class', 'y-axis-tick').attr('transform', 'translate(' + (yAxisLeftPosition - ticksLength) + ', ' + xAxisTopPosition + ')')
    .enterData(yTicks, 'line', 'y-axis-tick')
      .attr('x2', ticksLength)
      .attr('y1', function (t) { return -y(t); })
      .attr('y2', function (t) { return -y(t); });
  
  //paint y-axis - tick labels
  chart.append('svg:g').attr('class', 'y-axis-tick-label').attr('transform', 'translate(' + (yAxisLeftPosition - ticksLength - labelMargin) + ', ' + xAxisTopPosition + ')')
    .enterData(yTicks, 'text', 'y-axis-tick-label')
      .attr('y', function (t) { return -y(t); })
      .attr('dominant-baseline', 'middle')
      .attr('text-anchor', 'end')
      .text(String);
  
  //paint y-axis - token label
  chart.append('svg:g').attr('class', 'y-axis-token-label').attr('transform', 'translate(' + fontSize + ', ' + (xAxisTopPosition / 2) + ') rotate(270)')
    .append('svg:text').attr('class', 'y-axis-token-label')
      .attr('text-anchor', 'middle')
      .text(data.columns.c1.title);
  
  //paint graph - line
  chart.append('svg:g').attr('class', 'shape').attr('transform', 'translate(' + (yAxisLeftPosition + chartAxisPadding + (x.rangeBand() / 2)) + ', ' + xAxisTopPosition + ') scale(1, -1)')
    .append('svg:path').attr('class', 'shape')
      .attr('stroke', color)
      .attr('fill', 'none')
      .attr('stroke-width', 3)
      .attr('shape-rendering', 'initial')
      .attr('d', SF.Chart.Utils.getPathPoints($.map(data.rows, function (v) { return { x: x(getKey(v.c0)), y: y(getKey(v.c1)) }; })))
      
  //paint graph - hover area trigger
  chart.append('svg:g').attr('class', 'hover-trigger').attr('transform', 'translate(' + (yAxisLeftPosition + chartAxisPadding + (x.rangeBand() / 2)) + ', ' + xAxisTopPosition + ') scale(1, -1)')
    .enterData(data.rows, 'circle', 'hover-trigger')
      .attr('cx', function (v) { return x(getKey(v.c0)); })
      .attr('cy', function (v) { return y(getKey(v.c1)); })
      .attr('r', 15)
      .attr('fill', '#fff')
      .attr('fill-opacity', 0)
      .attr('stroke', 'none')
      .attr('data-click', function (v) { return getClickKeys(v, data.columns); })
      .append('svg:title')
      .text(function (v) { return getLabel(v.c0) + ': ' + getLabel(v.c1); })
      
  //paint graph - points
  chart.append('svg:g').attr('class', 'point').attr('transform', 'translate(' + (yAxisLeftPosition + chartAxisPadding + (x.rangeBand() / 2)) + ', ' + xAxisTopPosition + ') scale(1, -1)')
    .enterData(data.rows, 'circle', 'point')
      .attr('fill', color)
      .attr('r', 5)
      .attr('cx', function (v) { return x(getKey(v.c0)); })
      .attr('cy', function (v) { return y(getKey(v.c1)); })
      .attr('data-click', function (v) { return getClickKeys(v, data.columns); })
      .append('svg:title')
      .text(function (v) { return getLabel(v.c0) + ': ' + getLabel(v.c1); })
      
  //paint x-axis
  chart.append('svg:g').attr('class', 'x-axis').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ')')
    .append('svg:line')
    .attr('class', 'x-axis')
    .attr('x2', width - yAxisLeftPosition - padding);
  
  //paint y-axis
  chart.append('svg:g').attr('class', 'y-axis').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + padding + ')')
    .append('svg:line')
    .attr('class', 'y-axis')
    .attr('y2', xAxisTopPosition - padding);
}]]></Script>
</ChartScript>
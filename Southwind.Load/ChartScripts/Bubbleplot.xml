<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ChartScript GroupBy="Optional">
  <Columns>
    <Column DisplayName="Color" ColumnType="Groupable" IsGroupKey="true" />
    <Column DisplayName="Horizontal Axis" ColumnType="Positionable" />
    <Column DisplayName="Vertical Axis" ColumnType="Positionable" />
    <Column DisplayName="Size" ColumnType="Magnitude" />
  </Columns>
  <Icon FileName="bubbles.png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABQVJREFUeNrsmP1vU1UYx7+nL1u73Xbtdke3zo69sY051oFj6AAjUQwYthj9QX+QBBD8wYQoIZj4i/8AYZKYyCIiPyAxGuNw0+BbRIlDB4pjZmyOt40x2Mratevajvb2Hs+57Wo7eVlY92KyJ3nS9p7c9nO/z/d5zu0llFIs5FBhgcciYFIAt+49RhcVfMjQPOyJp85dpb93DqDnyjBkNglKC7OxuiofzzxeQuYd8KU9H9MMowGCkAaLNReyTDE44kNX859498hP9OvDO8m8lfjlPcfpkuxM5OVZYDAKUKtVSgoGAVarBSJb27zzMJ03wIwMAaJoZqrJSoaZepGUlTRnmRXw785cpnMO2Hj0NOVl5SXlvuNg8iRcmEZThj4tDe0dfXOvYM+129DpUiOKRWEi+a+CfC0lNQXdrHnmvEmoohq/KhqDiSk45f28eLC0IBvjPn8MIl41Oaomh5wITKC82DL3Cq6qtOGvE+eh0+tjvptUTY42C/dmwB9Arb0qOi/76A9tPbh4aUi5AJNRj43ry7G1fiVJuoJPrykiY55xjNx2ReHkODUjsF63BxN+PzatjQzsjz5vR5ikotpeBru9HEtyc3Hy9CUcbf6DzsqYOfH+NuJ0jmJ4yAGv14dgSEKIpX/ch1GnE+NjYzj54S4F7uCxNpotZrLG0kFi6klSGCAEWezYt6e7Z28naW3aQfica7/Qj+7LQ8ox7jle1knlePRedcCUmRWBUwBlhMJh8B7yeAPJBfSPDdT7Ow+1yI4zkNy9qGA/YhcLoKqoQ3r1Gw1pGbbWqeekpmhwJyhBo4UCGJLkGGzSu/jWJ3Ut1PELtBlFEB7dBWPlq9CaSkCHTqH7yJqWu52zZmUBXKMeBSzIyhuKpt8XQFmRJTmAAabctcM2arI9Bl1BPTTm5SBaQUltZgX0JS8iv2g5zh2wUp97oD5h3960gricbgwPj8Dnm0BgIgjv2DjcLheefbIiOYC+zqYWQSxGSs7auKMyn9rKK2VdnJq3AflWEf6Oxv8o+eWh7WTz+mXQkyBwxwv7six81bSdPLduerdlD/SgPHKWlbUkbjsJxyA5XOQY85mpDBLz593ilS12wnJ2BnWYNYQuty4BjspS9LMcU1NtsMHd34Z4Z7k7P6Ch/hblO3iozeXQLm2AacX07xen2STyfeEir4mdOfLj63Tiwn6otOnQFz8PXeEWEKa0s+0dZS1pCqqNhZC8A9CaS+NKOgWOK+29DsGcp7x3nX+PSoPfM7AXoNKJMfXVehGZgg2Oi83QiNXUVPUambGCRKyFNNp9Xzi+xmcjsayLwN74hjXVEwlwk55VM8CsRyoR6mtOTonTqnY3OIYGEbz58z3h+Nr1Wy7o7XsaIr79Gxrj0jhrRBuKn8/KrDYWQXJ1JafE6SZba+XuG6TjoJXmBkagYR2tFvJiZeXKcbjVe2/GykXl4OQNZCJcgpfDyd1JSra1N6hyNjA/Xoez6zMluTeJdSPKd/zWkOBbQwGksf57wvEL05jLkrsXC0xJ4alGRaUHbVIqWz2CPU1Qp+eAaIREOL8DnpsXYK59e3b/uN8vxNp9ZNjZQf29nyLFUsMUZX6UQ5A8V+AZ7IChcCMyV+0m8waoqLz5OLl9dj+V+r+Aq+9XqNh9oCG7GBk1b0GseZMkbQ7OJLKZkqjdh5n8O/n/PDxaaI/gjh3YqtiALD6jXgSc5/hHgAEA3YHVJnv5B90AAAAASUVORK5CYII=]]></Icon>
  <Script><![CDATA[
function DrawChart(chart, data){

//config variables
var yAxisLabelWidth = 60,
	fontSize= 15,
	ticksLength= 4,
	labelMargin= 5,
	chartAxisPadding= 5,
	padding= 5,
	yAxisLeftPosition = padding + fontSize + yAxisLabelWidth + (2 * labelMargin) + ticksLength,
	xAxisTopPosition = height - padding - (fontSize * 2) - (labelMargin * 2) - ticksLength,
	color = (data.points.length < 10 ? d3.scale.category10() : d3.scale.category20()).domain([0, $.map(data.points, function(v) { return myChart.getTokenKey(v.value1); })]);

//x axis scale
var x = d3.scale.linear()
	.domain([0, d3.max($.map(data.points, function (e) { return myChart.getTokenKey(e.dimension1); }))])
	.range([0, width - yAxisLeftPosition - padding]);

//y axis scale
var y = d3.scale.linear()
	.domain([0, d3.max($.map(data.points, function (e) { return myChart.getTokenKey(e.dimension2); }))])
	.range([0, xAxisTopPosition - padding]);

//paint x-axis - ticks
var xTicks = x.ticks(10);
chart.append('svg:g').attr('class', 'x-axis-tick').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ')')
	.enterData(xTicks, 'line', 'x-axis-tick')
	.attr('x1', x)
	.attr('x2', x)
	.attr('y2', ticksLength);

//paint x-axis - tick labels
chart.append('svg:g').attr('class', 'x-axis-tick-label').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + (xAxisTopPosition + ticksLength + labelMargin + fontSize) + ')')
	.enterData(xTicks, 'text', 'x-axis-tick-label')
	.attr('x', x)
	.attr('text-anchor', 'middle')
	.text(String);

//paint x-axis - token label
chart.append('svg:g').attr('class', 'x-axis-token-label').attr('transform', 'translate(' + (yAxisLeftPosition + ((width - yAxisLeftPosition) / 2)) + ', ' + height + ')')
	.append('svg:text').attr('class', 'x-axis-token-label')
	.attr('text-anchor', 'middle')
	.text(data.labels.dimension1);

//paint y-axis - ruler
var yTicks = y.ticks(8);
chart.append('svg:g').attr('class', 'y-ruler').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ')')
	.enterData(yTicks, 'line', 'y-ruler')
	.attr('x2', width - yAxisLeftPosition - padding)
	.attr('y1', function(t) { return -y(t); })
	.attr('y2', function(t) { return -y(t); });

//paint y-axis - ticks
chart.append('svg:g').attr('class', 'y-axis-tick').attr('transform', 'translate(' + (yAxisLeftPosition - ticksLength) + ', ' + xAxisTopPosition + ')')
	.enterData(yTicks, 'line', 'y-axis-tick')
	.attr('x2', ticksLength)
	.attr('y1', function(t) { return -y(t); })
	.attr('y2', function(t) { return -y(t); });

//paint y-axis - tick labels
chart.append('svg:g').attr('class', 'y-axis-tick-label').attr('transform', 'translate(' + (yAxisLeftPosition - ticksLength - labelMargin) + ', ' + xAxisTopPosition + ')')
	.enterData(yTicks, 'text', 'y-axis-tick-label')
	.attr('y', function(t) { return -y(t); })
	.attr('dominant-baseline', 'middle')
	.attr('text-anchor', 'end')
	.text(String);

//paint y-axis - token label
chart.append('svg:g').attr('class', 'y-axis-token-label').attr('transform', 'translate(' + fontSize + ', ' + (xAxisTopPosition / 2) + ') rotate(270)')
	.append('svg:text').attr('class', 'y-axis-token-label')
	.attr('text-anchor', 'middle')
	.text(data.labels.dimension2);

//paint graph
var sizeScale = myChart.getSizeScale(data, (width - yAxisLeftPosition) * (height - xAxisTopPosition));
chart.enterData(data.points, 'g', 'shape-serie').attr('transform' ,'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ') scale(1, -1)')
	.append('svg:circle').attr('class', 'shape')
	.attr('stroke', function(p) { return myChart.getTokenColor(p.value1, color); })
	.attr('fill', function(p) { return myChart.getTokenColor(p.value1, color); })
	.attr('shape-rendering', 'initial')
	.attr('r', function(p) { return Math.sqrt(sizeScale(myChart.getTokenKey(p.value2))/Math.PI); })
	.attr('cx', function(p) { return x(myChart.getTokenKey(p.dimension1)); })
	.attr('cy', function(p) { return y(myChart.getTokenKey(p.dimension2)); })
	.attr('data-v1', function(p) { return myChart.getTokenKey(p.value1); })
	.append('svg:title')
	.text(function(p) { return '(' + myChart.getTokenLabel(p.dimension1) + ', ' + myChart.getTokenLabel(p.dimension2) + ') ' + myChart.getTokenLabel(p.value1) + ': ' + myChart.getTokenLabel(p.value2); })

//paint x-axis
chart.append('svg:g').attr('class', 'x-axis').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ')')
	.append('svg:line')
	.attr('class', 'x-axis')
	.attr('x2', width - yAxisLeftPosition - padding);

//paint y-axis
chart.append('svg:g').attr('class', 'y-axis').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + padding + ')')
	.append('svg:line')
	.attr('class', 'y-axis')
	.attr('y2', xAxisTopPosition - padding);

}
]]></Script>
</ChartScript>
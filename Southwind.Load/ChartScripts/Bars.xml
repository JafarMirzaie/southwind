<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ChartScript GroupBy="Always">
  <Columns>
    <Column DisplayName="Bars" ColumnType="Groupable" IsGroupKey="true" />
    <Column DisplayName="Width" ColumnType="Magnitude" />
  </Columns>
  <Icon FileName="bars.png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAlxJREFUeNrsmL8vBEEUx2f2VEqdRCSikmhEoUJodAo9nU4n8V+IQqsRhX9ASDSU/AMKkWj9BxJm3vN+zNzO3XG3zhwb2bnMzdvZ2Z3PfN/b2Ze1iGjqXApT89IAZgHc3j/DRsH/CjgWjYfjSSwI13Jny+rJljGtIZcwPrVqJjbObTbA6eWDShcguGB4+gNqXGlDsBHM6/NFXgUrgxEIQyBw6z6xnQBmd/GXYDyZTJiCQQLD4Kg2JPaoAUuw/u5MwXj8ryhY2Z0MkoLGxYwKsBMMSzUGuRMTt2eE6wBUOAUb7E7T9UAE92aG61KwjztZKf/WqWbizlGA9QA+3hxlvfHM/FpewMX9F2tqWJpkoQGsTbq1tXeaJau2lqs1RUGVWhvbjr5C2tWlWbOzuWArAa6vLAzOaOQdjbKXA6DxZHhPlfZL77U6sdE476nSOad9wH20bwJtnUD75jtdf3v3xIB50i15WdAPBI4g+DWcAJVw1IYa+0AWoZUXyIvjwgvLkg+KYgwHqqAPEwpEql4EA2wf+wgoYGDS7wQ85keAGODErcDqlXBRHYbgiZ1LAQM0X8PnMSyu6/4/UjCFkwkQNKaSmONjR0EV40yVTGKSwwA1LHrxjIwdLh9EvR20VQOxe+LNlSqmDwgrKtdy24cBhlEQ5WfVPTxhCGoPpQshqkdPqj6xwa0QFwNB+f6TfysGMUgHaMWdGj/BXQwHumV40O1DYk7G6DGEMRGuykczgG+4+PL6/lfeDFY2bW03VuaqA16d7Dbp1v9OFur0Ce7scLsdbrb5Rt0A/nH5EGAAuxjsP4eQmj4AAAAASUVORK5CYII=]]></Icon>
  <Script><![CDATA[function DrawChart(chart, data){

//config variables
var fontSize = 10,
	ticksLength = 4,
	labelMargin = 5,
	chartAxisPadding = 5,
	padding = 5,
	yAxisLeftPosition = padding + fontSize + (2 * labelMargin) + ticksLength,
	xAxisTopPosition = height - padding - (fontSize * 2) - (labelMargin * 2) - ticksLength,
	color = (data.rows.length < 10 ? d3.scale.category10() : d3.scale.category20()).domain([0, $.map(data.rows, function (v) { return getKey(v.c0); })]);

//x axis scale
var x = d3.scale.linear()
	.domain([0, d3.max($.map(data.rows, function (e) { return getKey(e.c1); }))])
	.range([0, width - yAxisLeftPosition - padding]);

//y axis scale
var y = d3.scale.ordinal()
	.domain($.map(data.rows, function (e) { return getKey(e.c0); }))
	.rangeBands([0, xAxisTopPosition - padding - (2 * chartAxisPadding)]);

//paint x-axis - ruler
chart.append('svg:g').attr('class', 'x-ruler').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + padding + ')')
	.enterData(x.ticks(8), 'line', 'x-ruler')
	.attr('x1', x)
	.attr('x2', x)
	.attr('y2', xAxisTopPosition - padding);

//paint x-axis - ticks
chart.append('svg:g').attr('class', 'x-axis-tick').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ')')
	.enterData(x.ticks(8), 'line', 'x-axis-tick')
	.attr('x1', x)
	.attr('x2', x)
	.attr('y2', ticksLength);

//paint x-axis - tick labels
chart.append('svg:g').attr('class', 'x-axis-tick-label').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + (xAxisTopPosition + ticksLength + labelMargin + fontSize) + ')')
	.enterData(x.ticks(8), 'text', 'x-axis-tick-label')
	.attr('x', x)
	.attr('text-anchor', 'middle')
	.text(String);

//paint x-axis - token label
chart.append('svg:g').attr('class', 'x-axis-token-label').attr('transform', 'translate(' + (yAxisLeftPosition + ((width - yAxisLeftPosition) / 2)) + ', ' + height + ')')
	.append('svg:text').attr('class', 'x-axis-token-label')
	.attr('text-anchor', 'middle')
	.text(data.columns.c1.title);

//paint y-axis ticks
chart.append('svg:g').attr('class', 'y-axis-tick').attr('transform', 'translate(' + (yAxisLeftPosition - ticksLength) + ', ' + (padding + chartAxisPadding + (y.rangeBand() / 2)) + ')')
	.enterData(data.rows, 'line', 'y-axis-tick')
	.attr('x2', ticksLength)
	.attr('y1', function (v) { return y(getKey(v.c0)); })
	.attr('y2', function (v) { return y(getKey(v.c0)); });

//paint y-axis - token label
chart.append('svg:g').attr('class', 'y-axis-token-label').attr('transform', 'translate(' + fontSize + ', ' + (xAxisTopPosition / 2) + ') rotate(270)')
	.append('svg:text').attr('class', 'y-axis-token-label')
	.attr('text-anchor', 'middle')
	.text(data.columns.c0.title);

//paint graph
chart.append('svg:g').attr('class', 'shape').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + (padding + chartAxisPadding) + ')')
	.enterData(data.rows, 'rect', 'shape')
	.attr('width', function (v) { return x(getKey(v.c1)); })
	.attr('height', y.rangeBand)
	.attr('y', function (v) { return y(getKey(v.c0)); })
	.attr('fill', function (v) { return getColor(v.c0, color); })
	.attr('stroke', '#fff')
	.attr('data-click', function (v) { return getClickKeys(v, data.columns); })
	.append('svg:title')
	.text(function (d) { return getLabel(d.c0) + ': ' + getLabel(d.c1); });

//paint y-axis tick labels
var xHalf = (width - yAxisLeftPosition - padding) / 2;
if (y.rangeBand() > fontSize) {
    chart.append('svg:g').attr('class', 'y-axis-tick-label').attr('transform', 'translate(' + (yAxisLeftPosition + labelMargin) + ', ' + (padding + chartAxisPadding + (y.rangeBand() / 2) + (fontSize / 2)) + ')')
	.enterData(data.rows, 'text', 'y-axis-tick-label sf-chart-strong')
	.attr('x', function (v) { var posx = x(getKey(v.c1)); return posx >= xHalf ? 0 : posx; })
	.attr('y', function (v) { return y(getKey(v.c0)); })
	.attr('fill', function (v) { return x(getKey(v.c1)) >= xHalf ? '#fff' : getColor(v.c0, color); })
	.text(function (v) { return getLabel(v.c0); });
  
}

//paint x-axis
chart.append('svg:g').attr('class', 'x-axis').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + xAxisTopPosition + ')')
	.append('svg:line')
	.attr('class', 'x-axis')
	.attr('x2', width - yAxisLeftPosition - padding);

//paint y-axis
chart.append('svg:g').attr('class', 'y-axis').attr('transform', 'translate(' + yAxisLeftPosition + ', ' + padding + ')')
	.append('svg:line')
	.attr('class', 'y-axis')
	.attr('y2', xAxisTopPosition - padding);
}
]]></Script>
</ChartScript>
@using Southwind.Web
@using Southwind.Web.Controllers
@using Signum.Entities.Authorization
@using Signum.Web.Auth
<!doctype html>
<html>
<head>
    <title>@ViewBag.Title</title>
    @Html.ScriptCss("~/signum/content/reset.css")

    @{ 
        string currentTheme = (Session == null ? null: (string)Session[SouthwindClient.ThemeSessionKey]) ?? "cupertino"; 
        @Html.ScriptCss("~/content/jqueryui/{0}/jquery-ui-1.10.3.custom.min.css".Formato(currentTheme))
    }

    @Html.ScriptCss("~/signum/content/Lines.css",
       "~/signum/content/NormalPage.css",
       "~/signum/content/Notify.css",
       "~/signum/content/Search.css",
       "~/signum/content/Widgets.css",  
       "~/content/site.css")  

        @Html.ScriptsJs(
        "~/Scripts/promise-0.1.1.js",
        "~/Scripts/jquery-1.11.0.js",     
        "~/Scripts/jquery-ui-1.10.3.custom.min.js",
        "~/Scripts/require.js")  
     <script>
         require.config({
             baseUrl: '@Url.Content("~/Scripts")',
            paths: {
                "Framework/Signum.Web": "..",
                "Extensions/Signum.Web.Extensions": "..",

                "d3": "d3.v3.min",
                "ChartUtils": "../Chart/Scripts/ChartUtils",
                "ckeditor": "ckeditor/ckeditor",
            },
            shim: {
                d3: { exports: 'd3' },
                colorbrewer: { exports: 'colorbrewer' },
                ChartUtils: { exports: 'ChartUtils' }
            },
            urlArgs: "v=@ScriptHtmlHelper.Manager.Version"
        });
    </script>  

    @Html.ScriptsJs("~/signum/resources/" + System.Globalization.CultureInfo.CurrentCulture.Name + ".js")
    @Html.ScriptsJs("~/signum/calendarResources/" + System.Globalization.CultureInfo.CurrentCulture.Name + ".js")
    @Html.ScriptsJs("~/Signum/urls/signumCommon.js")
    @Html.ScriptsJs("~/Signum/Scripts/SF.js", "~/Signum/Scripts/SF.UI.js", "~/Scripts/newcontent.js")    

    @Html.ScriptsJs("~/scripts/southwind.js")

    @if (IsSectionDefined("head"))
    {
        @RenderSection("head")
    }
    
    <script type="text/javascript">

        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-30295254-1']);
        _gaq.push(['_trackPageview']);

        (function () {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();

</script>
</head>
<body class="ui-widget-content">
    <div id="wrap">
        <header id="header" class="ui-widget-header ui-corner-top">
            <div id="loginControl">
                @{ Html.RenderPartial(AuthClient.LoginUserControlView); }
            </div>
            <div id="title">
                <h1>@(Html.ActionLink("Southwind Application", (HomeController h)=>h.Index())) </h1>
            </div>
        </header>
        <div id="main" class="ui-widget-content">
            @if (UserDN.Current != null)
            {
                <div id="menu">
                    <div class="box menu ui-widget-content">
                        @{ Html.RenderPartial("Menu", ViewData["current"] = Context.Request.RawUrl);}
                    </div>
                </div>
            }
            <div id="contentContainer">
            <div id="content">
                @RenderBody()
            </div>
  			</div>          	
            <div class="clearall">
            </div>
        </div>
        <footer id="footer" class="ui-widget-header ui-corner-bottom">
            <div id="themeSelectorContainer">
                <span id="themeSelectorInfo">Select a jquery ui theme:</span>
                @{ 
                    var themes = new List<string> { "cupertino", "smoothness", "ui-lightness", "south-street", "redmond" }; 
                    @Html.DropDownList(
                        "themeSelector", 
                        themes.Select(s => new SelectListItem { Text = s, Value = s, Selected = currentTheme == s }), 
                        new Dictionary<string, object> { { "data-url", Url.Action<HomeController>(hc => hc.ChangeTheme()) } })
                }
            </div>
            <span id="powered">Powered by <a href="http://www.signumframework.com">Signum Framework</a></span>
        </footer>
    </div>
</body>
</html>

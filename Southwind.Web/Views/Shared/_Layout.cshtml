@using Southwind.Web
@using Southwind.Web.Controllers
@using Signum.Entities.Authorization
@using Signum.Web.Auth
@using Signum.Utilities
<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>

    @{ 
        string currentTheme = (Session == null ? null : (string)Session[SouthwindClient.ThemeSessionKey]) ?? "bootstrap";

        if (currentTheme == "bootstrap")
        {
        @Html.ScriptCss("~/Content/bootstrap/css/bootstrap.css");
        }
        else if (currentTheme == "bootstrap + theme")
        {
        @Html.ScriptCss(
                "~/Content/bootstrap/css/bootstrap.css",
                "~/Content/bootstrap/css/bootstrap-theme.css");
        }
        else
        {
        @Html.ScriptCss("~/Content/bootstrap/themes/{0}.css".Formato(currentTheme))
        }
    }

    @Html.ScriptCss(
        "~/Content/bootstrap-datepicker/css/datepicker3.css",
        "~/Content/bootstrap-timepicker/css/bootstrap-timepicker.css")

    @Html.ScriptCss(
       "~/signum/content/Lines.css",
       "~/signum/content/NormalPage.css",
       "~/signum/content/Notify.css",
       "~/signum/content/Search.css",
       "~/signum/content/Widgets.css",
       "~/content/site.css")

    @Html.ScriptsJs(
        "~/Scripts/promise-0.1.1.js",
        "~/Scripts/jquery-1.11.0.js",
        "~/Content/bootstrap/js/bootstrap.js",
        "~/Content/bootstrap-datepicker/js/bootstrap-datepicker.js",
        "~/Content/bootstrap-timepicker/js/bootstrap-timepicker.js",
        "~/Content/bootstrap-typeahead/bootstrap3-typeahead.js",
            // "~/Content/typeahead/typeahead.bundle.js",
        "~/Scripts/require.js")
    <script>
        require.config({
            baseUrl: '@Url.Content("~/Scripts")',
            paths: {
                "Framework/Signum.Web": "..",
                "Extensions/Signum.Web.Extensions": "..",

                "d3": "d3.v3.min",
                "ChartUtils": "../Chart/Scripts/ChartUtils",
                "ckeditor": "ckeditor/ckeditor",
            },
            shim: {
                d3: { exports: 'd3' },
                colorbrewer: { exports: 'colorbrewer' },
                ChartUtils: { exports: 'ChartUtils' }
            },
            urlArgs: "v=@ScriptHtmlHelper.Manager.Version"
        });
    </script>

    @Html.ScriptsJs("~/signum/resources/" + System.Globalization.CultureInfo.CurrentCulture.Name + ".js")
    @Html.ScriptsJs("~/signum/calendarResources/" + System.Globalization.CultureInfo.CurrentCulture.Name + ".js")
    @Html.ScriptsJs("~/Signum/urls/signumCommon.js")
    @Html.ScriptsJs("~/Signum/Scripts/SF.js", "~/Signum/Scripts/SF.UI.js")

    @Html.ScriptsJs("~/scripts/southwind.js")

    @if (IsSectionDefined("head"))
    {
        @RenderSection("head")
    }

    <script type="text/javascript">

        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-30295254-1']);
        _gaq.push(['_trackPageview']);

        (function () {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();

    </script>
</head>
<body>

    <header class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @(Html.ActionLink<HomeController>("Southwind", c => c.Index(), new { @class = "navbar-brand hidden-under-350" }))
                @(Html.ActionLink<HomeController>("SW", c => c.Index(), new { @class = "navbar-brand visible-under-350" }))
                @if (UserDN.Current != null)
                {
                    <input id="sfOmnibox" name="sfOmnibox" type="text" class="form-control" placeholder="@Signum.Entities.Omnibox.OmniboxMessage.Search.NiceToString()" />
                    <script type="text/javascript">
                        @(new JsFunction(Signum.Web.Omnibox.OmniboxClient.Module, "initialize", "sfOmnibox", Url.Action("Autocomplete", "Omnibox")))
                    </script>
                  
                }
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @if (UserDN.Current != null)
                    {
                        Html.RenderPartial("Menu");
                    }
                </ul>
                <ul class="nav navbar-nav navbar-right">

                    <li>
                        @{ 
                            var themes = new List<string> 
            { 
                "bootstrap", "bootstrap + theme", 
                "amelia", "cerulean", "cosmo", "cyborg", "darkly", "flatly",
                "journal", "lumen", "readable", "shamrock", "simplex", "slate",
                "spacelab", "superhero", "united", "yeti"
            };
                
                            @Html.DropDownList(
                "themeSelector",
                themes.Select(s => new SelectListItem { Text = s, Value = s, Selected = currentTheme == s }),
                new Dictionary<string, object> { 
                    { "data-url", Url.Action< HomeController>(hc => hc.ChangeTheme()) }, 
                    {"class", "form-control theme-selector" }   
                })
                        }
                    </li>

                    <li>
                        @{ Html.RenderPartial(AuthClient.LoginUserControlView);}
                    </li>
                </ul>
            </div>
        </div>
    </header>

    <div class="container">
        @RenderBody()
    </div
</body>
</html>
